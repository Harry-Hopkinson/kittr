name: Deploy Production

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Turborepo remote caching server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Run build
        env:
          DB_CONNECTION_STRING: ${{secrets.DB_CONNECTION_STRING}}
          NEXT_PUBLIC_GOOGLE_ANALYTICS: ${{secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS}}
          NEXT_PUBLIC_API_KEY: ${{secrets.NEXT_PUBLIC_API_KEY}}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL}}
          FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
          FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
          FIREBASE_CLIENT_EMAIL: ${{secrets.FIREBASE_CLIENT_EMAIL}}
          FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
          FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
          FIREBASE_MEASUREMENT_ID: ${{secrets.FIREBASE_MEASUREMENT_ID}}
          FIREBASE_COOKIE_SECRET_PREVIOUS: ${{secrets.FIREBASE_COOKIE_SECRET_PREVIOUS}}
          FIREBASE_COOKIE_SECRET_CURRENT: ${{secrets.FIREBASE_COOKIE_SECRET_CURRENT}}
          TWITCH_CLIENT_ID: ${{secrets.TWITCH_CLIENT_ID}}
          TWITCH_SECRET: ${{secrets.TWITCH_SECRET}}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}}
          STRIPE_SECRET_KEY: ${{secrets.STRIPE_SECRET_KEY}}
          STRIPE_WEBHOOK_SECRET: ${{secrets.STRIPE_WEBHOOK_SECRET}}
          SUBSCRIPTION_PRICE_ID: ${{secrets.SUBSCRIPTION_PRICE_ID}}
          MONTHLY_TIP_PRICE_ID: ${{secrets.MONTHLY_TIP_PRICE_ID}}
          NEXT_PUBLIC_SOCKET_HOST: ${{secrets.NEXT_PUBLIC_SOCKET_HOST}}
          GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
          NEXT_PUBLIC_SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_LOG_LEVEL: debug
        run: npm run build --scope=\"api\" --scope=\"web\" --include-dependencies --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team="kittr"

      - name: Build and push api image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/api
          push: true
          tags: ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Build and push web image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/web
          push: true
          tags: ghcr.io/${{github.repository}}/web:${{github.sha}}

      - name: Trigger api deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: ${{ secrets.DOKKU_SSH_PRIVATE_KEY }}
          script: |
            dokku git:from-image api ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Trigger web deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image web ghcr.io/${{github.repository}}/web:${{github.sha}}