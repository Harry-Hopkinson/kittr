name: Deploy Testing Environment and run E2E

on:
  push:
    branches:
      - develop
      # TODO: Delete this line once we are happy with the new pipeline.
      - turbo

jobs:
  build-and-unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2

      - name: Create API .env
        run: |
        cd apps
        cd api
        touch .env
        echo DB_CONNECTION_STRING=${{secrets.CI_DB_CONNECTION_STRING}} >> .env
        echo GOOGLE_APPLICATION_CREDENTIALS=${{secrets.CI_GOOGLE_APPLICATION_CREDENTIALS}} >> .env
        echo SENTRY_DSN=${{secrets.SENTRY_DSN}} >> .env
        echo TWITCH_CLIENT_ID=${{secrets.CI_TWITCH_CLIENT_ID}} >> .env
        echo TWITCH_CLIENT_SECRET=${{secrets.CI_CLIENT_SECRET}} >> .env
        echo TWITCH_EXTENSION_SECRET=${{secrets.TWITCH_EXTENSION_SECRET}} >> .env

      - name: Create web .env
        run: |
        cd apps
        cd web
        touch .env
        echo ADS_DISABLED=true >> .env
        echo ENABLE_SEEDING=true >> .env
        echo DB_CONNECTION_STRING=${{secrets.CI_DB_CONNECTION_STRING}} >> .env
        echo FIREBASE_PROJECT_ID=${{secrets.CI_FIREBASE_PROJECT_ID}} >> .env
        echo FIREBASE_AUTH_DOMAIN=${{secrets.CI_FIREBASE_AUTH_DOMAIN}} >> .env
        echo FIREBASE_CLIENT_EMAIL=${{secrets.CI_FIREBASE_CLIENT_EMAIL}} >> .env
        echo FIREBASE_MESSAGING_SENDER_ID=${{secrets.CI_FIREBASE_MESSAGING_SENDER_ID}} >> .env
        echo FIREBASE_APP_ID=${{secrets.CI_FIREBASE_APP_ID}} >> .env
        echo FIREBASE_MEASUREMENT_ID=${{secrets.CI_FIREBASE_MEASUREMENT_ID}} >> .env
        echo FIREBASE_COOKIE_SECRET_PREVIOUS=${{secrets.CI_FIREBASE_COOKIE_SECRET_PREVIOUS}} >> .env
        echo FIREBASE_COOKIE_SECRET_CURRENT=${{secrets.CI_FIREBASE_COOKIE_SECRET_CURRENT}} >> .env
        echo MONTHLY_TIP_PRICE_ID=${{secrets.CI_MONTHLY_TIP_PRICE_ID}} >> .env
        echo NEXT_PUBLIC_API_KEY=${{secrets.CI_NEXT_PUBLIC_API_KEY}} >> .env
        echo NEXT_PUBLIC_ENABLE_SEEDING=true >> .env
        echo NEXT_PUBLIC_ENVIRONMENT=${{secrets.CI_NODE_ENV}} >> .env
        echo NEXT_PUBLIC_FIREBASE_DATABASE_URL=${{secrets.CI_NEXT_PUBLIC_FIREBASE_DATABASE_URL}} >> .env
        echo NEXT_PUBLIC_GOOGLE_ANALYTICS=${{secrets.CI_NEXT_PUBLIC_GOOGLE_ANALYTICS}} >> .env
        echo NEXT_PUBLIC_SENTRY_DSN=${{secrets.SENTRY_DSN}} >> .env
        echo NEXT_PUBLIC_SOCKET_HOST=${{secrets.CI_NEXT_PUBLIC_SOCKET_HOST}} >> .env
        echo NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{secrets.CI_NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}} >> .env
        echo SENTRY_AUTH_TOKEN=${{secrets.SENTRY_AUTH_TOKEN}} >> .env
        echo STRIPE_SECRET_KEY=${{secrets.CI_STRIPE_SECRET_KEY}} >> .env
        echo STRIPE_WEBHOOK_SECRET=${{secrets.CI_STRIPE_WEBHOOK_SECRET}} >> .env
        echo SUBSCRIPTION_PRICE_ID=${{secrets.CI_SUBSCRIPTION_PRICE_ID}} >> .env
        echo TWITCH_CLIENT_ID=${{secrets.CI_TWITCH_CLIENT_ID}} >> .env
        echo TWITCH_SECRET=${{secrets.CI_TWITCH_SECRET}} >> .env
        echo GOOGLE_APPLICATION_CREDENTIALS=${{secrets.CI_GOOGLE_APPLICATION_CREDENTIALS}} >> .env

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run prod:build

      - name: Run unit tests
        run: npm run test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push api testing image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/api
          push: true
          tags: ghcr.io/${{github.repository}}/api:test-${{github.sha}}


      - name: Build and push web testing image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/web
          push: true
          tags: ghcr.io/${{github.repository}}/web:test-${{github.sha}}


  deploy:
    needs: build-and-unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Trigger api testing deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image test-api ghcr.io/${{github.repository}}/api:test-${{github.sha}}

      - name: Trigger web testing deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image test-web ghcr.io/${{github.repository}}/web:test-${{github.sha}}

  e2e:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./lib/e2e
          config-file: config.ci.json