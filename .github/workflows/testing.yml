name: Deploy Testing Environment and run E2E

on:
  push:
    branches:
      - develop
      # TODO: Delete this line once we are happy with the new pipeline.
      - turbo

jobs:
  build-and-unit-test:
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci

      - name: Turborepo remote caching server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
          DB_CONNECTION_STRING: ${{secrets.CI_DB_CONNECTION_STRING}}
          TWITCH_CLIENT_ID: ${{secrets.CI_TWITCH_CLIENT_ID}}
          TWITCH_SECRET: ${{secrets.CI_TWITCH_SECRET}}
        run: npm run build --scope=\"api\" --scope=\"web\" --include-dependencies --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team="kittr"

      - name: Run unit tests
        run: npm run test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push api testing image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/api
          push: true
          tags: ghcr.io/${{github.repository}}/api:test-${{github.sha}}

      - name: Build and push web testing image
        uses: docker/build-push-action@v2
        with:
          context: ./apps/web
          push: true
          tags: ghcr.io/${{github.repository}}/web:test-${{github.sha}}


  deploy:
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    needs: build-and-unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Trigger api testing deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image stage-api ghcr.io/${{github.repository}}/api:test-${{github.sha}}

      - name: Trigger web testing deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image stage-web ghcr.io/${{github.repository}}/web:test-${{github.sha}}

  e2e:
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./lib/e2e
          config-file: config.ci.json