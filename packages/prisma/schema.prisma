generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Channel {
  id                 String                     @id @default(cuid())
  createdAt          DateTime                   @default(now())
  displayName        String
  urlSafeName        String
  viewCount          Int
  previousUpdater    String?
  games              Game[]
  gameAffiliateCodes ChannelAffiliateCode[]
  customGameCommands ChannelCustomGameCommand[]
  kits               Kit[]
}

model Kit {
  id          String      @id @default(cuid())
  customTitle String
  blueprint   String
  featured    Boolean
  youtubeUrl  String
  tiktokUrl   String
  quote       String
  kitBaseId   String
  kitBase     KitBase     @relation(fields: [kitBaseId], references: [id])
  options     KitOption[]
  channel     Channel     @relation(fields: [channelId], references: [id])
  channelId   String
}

model ChannelCustomGameCommand {
  id        String  @id @default(cuid())
  command   String
  game      Game    @relation(fields: [gameId], references: [id])
  gameId    String
  channel   Channel @relation(fields: [channelId], references: [id])
  channelId String
}

model ChannelAffiliateCode {
  id        String  @id @default(cuid())
  channel   Channel @relation(fields: [channelId], references: [id])
  channelId String
  games     Game[]
  gameId    String
  code      String
}

model KitOption {
  id             String  @id @default(cuid())
  gameId         String
  displayName    String
  slotKey        String
  orderPlacement Int
  kit            KitBase @relation(fields: [kitId], references: [id])
  kitId          String
  channelKits    Kit[]
}

model KitBase {
  id               String          @id @default(cuid())
  displayName      String
  game             Game            @relation(fields: [gameId], references: [id])
  gameId           String
  imageUrl         String
  blurb            String
  maxOptions       Int
  stats            KitStat[]
  commandCodes     CommandCode[]
  availableOptions KitOption[]
  category         KitBaseCategory @relation(fields: [categoryId], references: [id])
  categoryId       String
  kits             Kit[]
}

model KitBaseCategory {
  id          String    @id @default(cuid())
  displayName String    @unique
  kit         KitBase[]
}

model CommandCode {
  id        String  @id @default(cuid())
  code      String
  kitBase   KitBase @relation(fields: [kitBaseId], references: [id])
  kitBaseId String
}

model KitStat {
  id          String  @id @default(cuid())
  displayName String
  value       String
  kitBase     KitBase @relation(fields: [kitBaseId], references: [id])
  kitBaseId   String
}

model Game {
  id                    String                     @id @default(cuid())
  displayName           String
  urlSafeName           String
  backgroundImageUrl    String
  titleImageUrl         String
  active                Boolean
  blurDataUrl           String
  developer             String
  genres                Genre[]
  platforms             Platform[]
  releaseDate           DateTime
  kitBases              KitBase[]
  channels              Channel[]
  channelAffiliateCodes ChannelAffiliateCode[]
  customCommandStrings  ChannelCustomGameCommand[]
}

model Platform {
  id          String @id @default(cuid())
  displayName String @unique
  games       Game[]
}

model Genre {
  id          String @id @default(cuid())
  displayName String @unique
  games       Game[]
}

model BlogPost {
  id        String   @id @default(cuid())
  author    String
  createdAt DateTime
  title     String   @unique
  slug      String   @unique
  markdown  String
}
